#version 430 core

// Implementation of the 3rd pass of parallel scan algorithm described in Eficient Parallel Scan Algorithms for GPUs
// ( http://mgarland.org/files/papers/nvr-2008-003.pdf ). In this pass the global prefixes are summed to all per-block prefixes.

layout( local_size_x = 1024 ) in;

layout( std430, binding = 0 ) coherent buffer original
{
	uint gOriginal[];
};

layout( std430, binding = 1 ) coherent buffer scan
{
	uint gScan[];
};

layout( std430, binding = 2 ) coherent buffer globalPrefixes
{
	uint gGlobalPrefixes[];
};

// Contains the reduction of the values in gOriginal.
layout( std430, binding = 3 ) coherent buffer nElements
{
	uint gNElements;
};

// Contains the reduction of the values in gOriginal.
layout( std430, binding = 4 ) coherent buffer reduction
{
	uint gReduction;
};

shared uint sGlobalPrefix;

void main()
{
	if( gl_LocalInvocationIndex == 0 )
	{
		sGlobalPrefix = gGlobalPrefixes[ gl_WorkGroupID.x ];
	}
	barrier();
	memoryBarrierShared();	
	
	uint globalIdx = gl_GlobalInvocationID.x;
	
	uint finalScan = gScan[ globalIdx ] + sGlobalPrefix;
	gScan[ globalIdx ] = finalScan;
	
	// Saves reduction value.
	if( globalIdx == gNElements - 1 )
	{
		gReduction = finalScan + gOriginal[ globalIdx ];
	}
}